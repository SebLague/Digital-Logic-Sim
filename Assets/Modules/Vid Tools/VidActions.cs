//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Modules/Vid Tools/VidActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @VidActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @VidActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""VidActions"",
    ""maps"": [
        {
            ""name"": ""Map"",
            ""id"": ""11dbe28b-5893-4322-993b-c41ff27ecdfc"",
            ""actions"": [
                {
                    ""name"": ""Toggle Recording"",
                    ""type"": ""Button"",
                    ""id"": ""29f06070-1f1c-44cf-84de-a71a3dcd23a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Start Playback"",
                    ""type"": ""Button"",
                    ""id"": ""47512f88-5f89-4d03-a33f-6bbb929af06c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""6270973d-1f0d-4108-8863-6186c44c5d72"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Save"",
                    ""type"": ""Button"",
                    ""id"": ""5c61afff-7559-48d7-a785-1f75059179b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Load"",
                    ""type"": ""Button"",
                    ""id"": ""ec13ec16-2d9a-4d52-881f-b762b0812090"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""0a982a55-3c55-4662-a5ad-e991078d3ad8"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Toggle Recording"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""13451d48-c27a-4197-b1e0-4274cfe58981"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Vid Controls"",
                    ""action"": ""Toggle Recording"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""553a1376-c8be-47ee-a44f-a57440a96d97"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Vid Controls"",
                    ""action"": ""Toggle Recording"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""cdbaf3d7-69cc-4992-a81a-764a6b0cd881"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start Playback"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""14538da7-9bc3-4fb9-b882-08edbdc0fa01"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start Playback"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""ec961ce8-d6a9-4e97-8b94-55a86050a35a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start Playback"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""950691cb-3086-4acf-9802-f07e18591778"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""142a5574-442d-474e-abec-9c0db8fc1c23"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""c575f3c9-f5c9-461e-a66d-86ed7cd7bb54"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""22385086-6e5a-4f80-9455-866a14826d1d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""197cd40f-629c-4fda-b9e6-8b76b9df0b53"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Load"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""992eb2fd-27c5-4448-a1ed-ebee10fc25c2"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Load"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""aa18a5f7-3fad-4cfd-a289-2760ddb10873"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Load"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Vid Controls"",
            ""bindingGroup"": ""Vid Controls"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Map
        m_Map = asset.FindActionMap("Map", throwIfNotFound: true);
        m_Map_ToggleRecording = m_Map.FindAction("Toggle Recording", throwIfNotFound: true);
        m_Map_StartPlayback = m_Map.FindAction("Start Playback", throwIfNotFound: true);
        m_Map_Cancel = m_Map.FindAction("Cancel", throwIfNotFound: true);
        m_Map_Save = m_Map.FindAction("Save", throwIfNotFound: true);
        m_Map_Load = m_Map.FindAction("Load", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Map
    private readonly InputActionMap m_Map;
    private IMapActions m_MapActionsCallbackInterface;
    private readonly InputAction m_Map_ToggleRecording;
    private readonly InputAction m_Map_StartPlayback;
    private readonly InputAction m_Map_Cancel;
    private readonly InputAction m_Map_Save;
    private readonly InputAction m_Map_Load;
    public struct MapActions
    {
        private @VidActions m_Wrapper;
        public MapActions(@VidActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ToggleRecording => m_Wrapper.m_Map_ToggleRecording;
        public InputAction @StartPlayback => m_Wrapper.m_Map_StartPlayback;
        public InputAction @Cancel => m_Wrapper.m_Map_Cancel;
        public InputAction @Save => m_Wrapper.m_Map_Save;
        public InputAction @Load => m_Wrapper.m_Map_Load;
        public InputActionMap Get() { return m_Wrapper.m_Map; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MapActions set) { return set.Get(); }
        public void SetCallbacks(IMapActions instance)
        {
            if (m_Wrapper.m_MapActionsCallbackInterface != null)
            {
                @ToggleRecording.started -= m_Wrapper.m_MapActionsCallbackInterface.OnToggleRecording;
                @ToggleRecording.performed -= m_Wrapper.m_MapActionsCallbackInterface.OnToggleRecording;
                @ToggleRecording.canceled -= m_Wrapper.m_MapActionsCallbackInterface.OnToggleRecording;
                @StartPlayback.started -= m_Wrapper.m_MapActionsCallbackInterface.OnStartPlayback;
                @StartPlayback.performed -= m_Wrapper.m_MapActionsCallbackInterface.OnStartPlayback;
                @StartPlayback.canceled -= m_Wrapper.m_MapActionsCallbackInterface.OnStartPlayback;
                @Cancel.started -= m_Wrapper.m_MapActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_MapActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_MapActionsCallbackInterface.OnCancel;
                @Save.started -= m_Wrapper.m_MapActionsCallbackInterface.OnSave;
                @Save.performed -= m_Wrapper.m_MapActionsCallbackInterface.OnSave;
                @Save.canceled -= m_Wrapper.m_MapActionsCallbackInterface.OnSave;
                @Load.started -= m_Wrapper.m_MapActionsCallbackInterface.OnLoad;
                @Load.performed -= m_Wrapper.m_MapActionsCallbackInterface.OnLoad;
                @Load.canceled -= m_Wrapper.m_MapActionsCallbackInterface.OnLoad;
            }
            m_Wrapper.m_MapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ToggleRecording.started += instance.OnToggleRecording;
                @ToggleRecording.performed += instance.OnToggleRecording;
                @ToggleRecording.canceled += instance.OnToggleRecording;
                @StartPlayback.started += instance.OnStartPlayback;
                @StartPlayback.performed += instance.OnStartPlayback;
                @StartPlayback.canceled += instance.OnStartPlayback;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Save.started += instance.OnSave;
                @Save.performed += instance.OnSave;
                @Save.canceled += instance.OnSave;
                @Load.started += instance.OnLoad;
                @Load.performed += instance.OnLoad;
                @Load.canceled += instance.OnLoad;
            }
        }
    }
    public MapActions @Map => new MapActions(this);
    private int m_VidControlsSchemeIndex = -1;
    public InputControlScheme VidControlsScheme
    {
        get
        {
            if (m_VidControlsSchemeIndex == -1) m_VidControlsSchemeIndex = asset.FindControlSchemeIndex("Vid Controls");
            return asset.controlSchemes[m_VidControlsSchemeIndex];
        }
    }
    public interface IMapActions
    {
        void OnToggleRecording(InputAction.CallbackContext context);
        void OnStartPlayback(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnSave(InputAction.CallbackContext context);
        void OnLoad(InputAction.CallbackContext context);
    }
}
